[{"/home/jezra/Documents/Project/Encrypted-Chat-Project/src/index.js":"1","/home/jezra/Documents/Project/Encrypted-Chat-Project/src/App.js":"2","/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/ChatFeed.jsx":"3","/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/LoginForm.jsx":"4","/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/EntranceScreen.jsx":"5","/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/ChatCard.jsx":"6","/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/MyMessage.jsx":"7","/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/TheirMessage.jsx":"8","/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/MessageForm.jsx":"9","/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/EncryptorDecryptor.jsx":"10","/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/RegisterForm.jsx":"11"},{"size":147,"mtime":1670859136390,"results":"12","hashOfConfig":"13"},{"size":994,"mtime":1673280895664,"results":"14","hashOfConfig":"13"},{"size":2401,"mtime":1672839620337,"results":"15","hashOfConfig":"13"},{"size":1919,"mtime":1670954335033,"results":"16","hashOfConfig":"13"},{"size":734,"mtime":1672073898548,"results":"17","hashOfConfig":"13"},{"size":8097,"mtime":1673287065252,"results":"18","hashOfConfig":"13"},{"size":564,"mtime":1672834355114,"results":"19","hashOfConfig":"13"},{"size":1033,"mtime":1672073898548,"results":"20","hashOfConfig":"13"},{"size":1584,"mtime":1672834336419,"results":"21","hashOfConfig":"13"},{"size":2072,"mtime":1672770998534,"results":"22","hashOfConfig":"13"},{"size":3196,"mtime":1672771074798,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1981s6w",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"/home/jezra/Documents/Project/Encrypted-Chat-Project/src/index.js",[],["51","52"],"/home/jezra/Documents/Project/Encrypted-Chat-Project/src/App.js",["53"],"import React from 'react';\nimport { ChatEngine } from 'react-chat-engine';\nimport ChatFeed from './components/ChatFeed';\nimport LoginForm from './components/LoginForm';\nimport './App.css';\nimport EntranceScreen from './components/EntranceScreen';\nimport ChatCard from './components/ChatCard';\n\nconst projectID = '5a16c1de-ea4c-4c12-9b6c-172f530bf6a6';\n\nconst App = () => {\n  if (!localStorage.getItem('username')) return <EntranceScreen />;\n\n  return (\n    <ChatEngine\n      height=\"100vh\"\n      projectID={projectID}\n      userName={localStorage.getItem('username')}\n      userSecret={localStorage.getItem('password')}\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n      renderChatCard={(chat, index) =>  <ChatCard key={`${index}`} chat={chat} />}\n      //renderChatCard={(props, chat) =>   <ChatCard {...props} chat={chat} />}\n      onNewMessage={() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\n\n    />\n  );\n};\n\n\nexport default App;\n","/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/ChatFeed.jsx",["54","55","56","57"],"import MyMessage from './MyMessage';\nimport TheirMessage from './TheirMessage';\nimport MessageForm from './MessageForm';\nimport { decrypt } from './EncryptorDecryptor';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\n\nconst ChatFeed = (props) => {\n  const { chats, activeChat, userName, messages, ChatCard } = props;\n\n  const chat = chats && chats[activeChat];\n\n  const handleLogout = () => {\n    localStorage.clear();\n    window.location.reload();\n  };\n\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\n    <div\n      key={`read_${index}`}\n      className=\"read-receipt\"\n      style={{\n        float: isMyMessage ? 'right' : 'left',\n        backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\n      }}\n    />\n  ));\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n      //const decryptedMsg = decrypt(message, '123123');\n      \n      return (\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\n          <div className=\"message-block\">\n            {isMyMessage\n              ? <MyMessage message={message} /> //display decrypt(message)\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\n          </div>\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\n            {renderReadReceipts(message, isMyMessage)}\n          </div>\n        </div>\n      );\n    });\n  };\n\n  if (!chat) return <div />;\n\n  return (\n    <div className=\"chat-feed\">\n      <div className=\"logout\">\n        <button onClick={handleLogout}>Log Out</button>\n      </div>\n      <div className=\"chat-title-container\">\n        <div className=\"chat-title\">{chat?.title}</div>\n        <div className=\"chat-subtitle\">\n          {chat.people.map((person) => ` ${person.person.username}`)}\n        </div>\n      </div>\n      {renderMessages()}\n      <div style={{ height: '100px' }} />\n      <div className=\"message-form-container\">\n        <MessageForm {...props} chatId={activeChat} />\n      </div>\n    </div>\n  );\n};\n\nexport default ChatFeed;\n\n","/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/LoginForm.jsx",["58"],"import { useState } from 'react';\nimport axios from 'axios';\nimport { PropertySafetyFilled } from '@ant-design/icons';\n\n// const projectID = '5a16c1de-ea4c-4c12-9b6c-172f530bf6a6';\n\nconst Modal = props => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const signUpHandler = () => {\n    props.startRegistering();\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const authObject = { 'Project-ID': props.projectID, 'User-Name': username, 'User-Secret': password };\n\n    try {\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\n\n      localStorage.setItem('username', username);\n      localStorage.setItem('password', password);\n\n      window.location.reload();\n      setError('');\n    } catch (err) {\n      setError('Oops, incorrect credentials.');\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"form\">\n        <h1 className=\"title\">Chat Application</h1>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\n          <div align=\"center\">\n            <button type=\"submit\" className=\"button\">\n              <span>Start chatting</span>\n            </button>\n          </div>\n        </form>\n        <div style={{justifyContent: 'center' ,direction: 'ltr', display: 'flex'}}>\n          <h3 style={{color: 'darkgrey'}}>Don't Have A User?</h3>\n          <button onClick={signUpHandler} style={{marginLeft: '10px'}}>\n            <span>Sign Up!</span>\n          </button>\n        </div>\n        <h1>{error}</h1>\n      </div>\n    </div>\n\n  );\n};\n\nexport default Modal;\n","/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/EntranceScreen.jsx",[],"/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/ChatCard.jsx",["59","60"],"/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/MyMessage.jsx",[],"/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/TheirMessage.jsx",[],"/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/MessageForm.jsx",[],"/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/EncryptorDecryptor.jsx",[],"/home/jezra/Documents/Project/Encrypted-Chat-Project/src/components/RegisterForm.jsx",["61","62"],"import { useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\nconst RegisterForm = (props) => {\r\n    \r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [first, setFirst] = useState('');\r\n  const [last, setLast] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n    const handleSubmit = async e => {\r\n      e.preventDefault();\r\n\r\n      //header for authentication\r\n      const authObject = {'Private-Key': '3d39fc94-8fdd-4514-8137-15c9c587379b'}\r\n      var axios = require('axios');\r\n\r\n      var config = {\r\n        method: 'post',\r\n        url: 'https://api.chatengine.io/users/',\r\n        headers: authObject,\r\n        data : {'username': username, 'secret': password}\r\n      };\r\n      \r\n      axios(config)\r\n      .then(function (response) {\r\n        console.log(JSON.stringify(response.data));\r\n        setUsername('');\r\n        setPassword('');\r\n        setEmail('');\r\n        setFirst('');\r\n        setLast('');\r\n        props.stopRegistering();\r\n        alert('Successfully registered, please log in');\r\n        })\r\n      .catch(function (error) {\r\n        alert('Could not register, username is already taken');\r\n        console.log(error);\r\n      });\r\n\r\n    }\r\n    \r\n    const logInHandler = () => {\r\n        props.stopRegistering();\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n          <div className=\"form\">\r\n            <h1 className=\"title\">Register Form</h1>\r\n            <h4 style={{justifyContent: 'center', display: 'flex', marginBottom: '8px'}}>Fields With * Are Required</h4>\r\n            <form onSubmit={handleSubmit}>\r\n              <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username*\" required />\r\n              <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password*\" required />\r\n              {/* <input type=\"password\" value={password2} onChange={(e) => setPassword2(e.target.value)} className=\"input\" placeholder=\"Confirm Password\" required /> */}\r\n              <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} className=\"input\" placeholder=\"Email\" />\r\n              <input type=\"first\" value={first} onChange={(e) => setFirst(e.target.value)} className=\"input\" placeholder=\"First Name\" />\r\n              <input type=\"last\" value={last} onChange={(e) => setLast(e.target.value)} className=\"input\" placeholder=\"Last Name\" />\r\n              <div align=\"center\">\r\n                <button type=\"submit\" className=\"button\">\r\n                  <span>Register</span>\r\n                </button>\r\n              </div>\r\n            </form>\r\n            <div style={{justifyContent: 'center' ,direction: 'ltr', display: 'flex'}}>\r\n              <h3 style={{color: 'darkgrey'}}>Already Have An Acount?</h3>\r\n              <button onClick={logInHandler} style={{marginLeft: '10px'}}>\r\n                <span>Log In</span>\r\n              </button>\r\n            </div>\r\n            <h1>{error}</h1>\r\n          </div>\r\n        </div>\r\n    \r\n      );\r\n}\r\n\r\nexport default RegisterForm",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":17},{"ruleId":"67","severity":1,"message":"71","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":17},{"ruleId":"67","severity":1,"message":"72","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":13},{"ruleId":"67","severity":1,"message":"73","line":6,"column":10,"nodeType":"69","messageId":"70","endLine":6,"endColumn":21},{"ruleId":"67","severity":1,"message":"74","line":9,"column":50,"nodeType":"69","messageId":"70","endLine":9,"endColumn":58},{"ruleId":"67","severity":1,"message":"75","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":30},{"ruleId":"67","severity":1,"message":"76","line":110,"column":8,"nodeType":"69","messageId":"70","endLine":110,"endColumn":9},{"ruleId":"77","severity":1,"message":"78","line":152,"column":38,"nodeType":"79","messageId":"80","endLine":152,"endColumn":40},{"ruleId":"67","severity":1,"message":"72","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":13},{"ruleId":"67","severity":1,"message":"81","line":11,"column":17,"nodeType":"69","messageId":"70","endLine":11,"endColumn":25},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'LoginForm' is defined but never used.","Identifier","unusedVar","'decrypt' is defined but never used.","'axios' is defined but never used.","'useLocation' is defined but never used.","'ChatCard' is assigned a value but never used.","'PropertySafetyFilled' is defined but never used.","'_' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setError' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
[{"C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\index.js":"1","C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\App.js":"2","C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\EntranceScreen.jsx":"3","C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\LoginForm.jsx":"4","C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\ChatFeed.jsx":"5","C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\RegisterForm.jsx":"6","C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\MyMessage.jsx":"7","C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\TheirMessage.jsx":"8","C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\MessageForm.jsx":"9","C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\EncryptorDecryptor.jsx":"10","C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\ChatCard.jsx":"11"},{"size":153,"mtime":1670854511664,"results":"12","hashOfConfig":"13"},{"size":1546,"mtime":1673278040677,"results":"14","hashOfConfig":"13"},{"size":734,"mtime":1671027160199,"results":"15","hashOfConfig":"13"},{"size":1979,"mtime":1670854727653,"results":"16","hashOfConfig":"13"},{"size":2477,"mtime":1673274886248,"results":"17","hashOfConfig":"13"},{"size":3196,"mtime":1672767909050,"results":"18","hashOfConfig":"13"},{"size":586,"mtime":1672062254223,"results":"19","hashOfConfig":"13"},{"size":1065,"mtime":1672062257673,"results":"20","hashOfConfig":"13"},{"size":1645,"mtime":1672062249879,"results":"21","hashOfConfig":"13"},{"size":2131,"mtime":1672061114371,"results":"22","hashOfConfig":"13"},{"size":1193,"mtime":1673280243189,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"qsl3oc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\index.js",[],["51","52"],"C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\App.js",["53","54"],"import React from 'react';\r\nimport { ChatEngine } from 'react-chat-engine';\r\nimport ChatFeed from './components/ChatFeed';\r\nimport LoginForm from './components/LoginForm';\r\nimport './App.css';\r\nimport EntranceScreen from './components/EntranceScreen';\r\nimport ChatCard from './components/ChatCard';\r\n\r\nconst projectID = '5a16c1de-ea4c-4c12-9b6c-172f530bf6a6';\r\n\r\nconst App = () => {\r\n  if (!localStorage.getItem('username')) return <EntranceScreen />;\r\n\r\n  return (\r\n    <ChatEngine\r\n      height=\"100vh\"\r\n      projectID={projectID}\r\n      userName={localStorage.getItem('username')}\r\n      userSecret={localStorage.getItem('password')}\r\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n      renderChatCard={(chat, index) =>  <ChatCard key={`${index}`} chat={chat} />}\r\n      onNewMessage={() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\r\n\r\n    />\r\n  );\r\n};\r\n\r\nconst styles={\r\n  chatContainer: { \r\n      padding: '16px', \r\n      paddingBottom: '12px',\r\n      cursor: 'pointer'\r\n  },\r\n  titleText: { \r\n      fontWeight: '500',\r\n      paddingBottom: '4px', \r\n      whiteSpace: 'nowrap', \r\n      overflow: 'hidden' \r\n  },\r\n  messageText: {\r\n      width: '75%',\r\n      color: 'rgba(153, 153, 153, 1)', \r\n      fontSize: '14px', \r\n      whiteSpace: 'nowrap', \r\n      overflow: 'hidden',\r\n      display: 'inline-block'\r\n  },\r\n  loadingBar: {\r\n      borderRadius: '4px',\r\n      backgroundColor: '#e2e2e2', \r\n      height: '12px', \r\n      display: 'inline-block'\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\EntranceScreen.jsx",[],"C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\LoginForm.jsx",["55"],"import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { PropertySafetyFilled } from '@ant-design/icons';\r\n\r\n// const projectID = '5a16c1de-ea4c-4c12-9b6c-172f530bf6a6';\r\n\r\nconst Modal = props => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const signUpHandler = () => {\r\n    props.startRegistering();\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = { 'Project-ID': props.projectID, 'User-Name': username, 'User-Secret': password };\r\n\r\n    try {\r\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n      localStorage.setItem('username', username);\r\n      localStorage.setItem('password', password);\r\n\r\n      window.location.reload();\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Oops, incorrect credentials.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Chat Application</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Start chatting</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div style={{justifyContent: 'center' ,direction: 'ltr', display: 'flex'}}>\r\n          <h3 style={{color: 'darkgrey'}}>Don't Have A User?</h3>\r\n          <button onClick={signUpHandler} style={{marginLeft: '10px'}}>\r\n            <span>Sign Up!</span>\r\n          </button>\r\n        </div>\r\n        <h1>{error}</h1>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\ChatFeed.jsx",["56","57","58","59"],"import MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\nimport MessageForm from './MessageForm';\r\nimport { decrypt } from './EncryptorDecryptor';\r\nimport axios from 'axios';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages, ChatCard } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    window.location.reload();\r\n  };\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\r\n    <div\r\n      key={`read_${index}`}\r\n      className=\"read-receipt\"\r\n      style={{\r\n        float: isMyMessage ? 'right' : 'left',\r\n        backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\r\n      }}\r\n    />\r\n  ));\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n      //const decryptedMsg = decrypt(message, '123123');\r\n      \r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage\r\n              ? <MyMessage message={message} /> //display decrypt(message)\r\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\r\n          </div>\r\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n            {renderReadReceipts(message, isMyMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return <div />;\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"logout\">\r\n        <button onClick={handleLogout}>Log Out</button>\r\n      </div>\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: '100px' }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;\r\n\r\n","C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\RegisterForm.jsx",["60","61"],"import { useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\nconst RegisterForm = (props) => {\r\n    \r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [first, setFirst] = useState('');\r\n  const [last, setLast] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n    const handleSubmit = async e => {\r\n      e.preventDefault();\r\n\r\n      //header for authentication\r\n      const authObject = {'Private-Key': '3d39fc94-8fdd-4514-8137-15c9c587379b'}\r\n      var axios = require('axios');\r\n\r\n      var config = {\r\n        method: 'post',\r\n        url: 'https://api.chatengine.io/users/',\r\n        headers: authObject,\r\n        data : {'username': username, 'secret': password}\r\n      };\r\n      \r\n      axios(config)\r\n      .then(function (response) {\r\n        console.log(JSON.stringify(response.data));\r\n        setUsername('');\r\n        setPassword('');\r\n        setEmail('');\r\n        setFirst('');\r\n        setLast('');\r\n        props.stopRegistering();\r\n        alert('Successfully registered, please log in');\r\n        })\r\n      .catch(function (error) {\r\n        alert('Could not register, username is already taken');\r\n        console.log(error);\r\n      });\r\n\r\n    }\r\n    \r\n    const logInHandler = () => {\r\n        props.stopRegistering();\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n          <div className=\"form\">\r\n            <h1 className=\"title\">Register Form</h1>\r\n            <h4 style={{justifyContent: 'center', display: 'flex', marginBottom: '8px'}}>Fields With * Are Required</h4>\r\n            <form onSubmit={handleSubmit}>\r\n              <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username*\" required />\r\n              <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password*\" required />\r\n              {/* <input type=\"password\" value={password2} onChange={(e) => setPassword2(e.target.value)} className=\"input\" placeholder=\"Confirm Password\" required /> */}\r\n              <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} className=\"input\" placeholder=\"Email\" />\r\n              <input type=\"first\" value={first} onChange={(e) => setFirst(e.target.value)} className=\"input\" placeholder=\"First Name\" />\r\n              <input type=\"last\" value={last} onChange={(e) => setLast(e.target.value)} className=\"input\" placeholder=\"Last Name\" />\r\n              <div align=\"center\">\r\n                <button type=\"submit\" className=\"button\">\r\n                  <span>Register</span>\r\n                </button>\r\n              </div>\r\n            </form>\r\n            <div style={{justifyContent: 'center' ,direction: 'ltr', display: 'flex'}}>\r\n              <h3 style={{color: 'darkgrey'}}>Already Have An Acount?</h3>\r\n              <button onClick={logInHandler} style={{marginLeft: '10px'}}>\r\n                <span>Log In</span>\r\n              </button>\r\n            </div>\r\n            <h1>{error}</h1>\r\n          </div>\r\n        </div>\r\n    \r\n      );\r\n}\r\n\r\nexport default RegisterForm","C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\MyMessage.jsx",[],"C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\TheirMessage.jsx",[],"C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\MessageForm.jsx",[],"C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\EncryptorDecryptor.jsx",[],"C:\\Users\\user\\Education\\BGU\\7th Semester\\mini\\Encrypted-Chat-Project\\src\\components\\ChatCard.jsx",["62","63","64","65","66","67","68","69","70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":17},{"ruleId":"75","severity":1,"message":"79","line":28,"column":7,"nodeType":"77","messageId":"78","endLine":28,"endColumn":13},{"ruleId":"75","severity":1,"message":"80","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":30},{"ruleId":"75","severity":1,"message":"81","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":17},{"ruleId":"75","severity":1,"message":"82","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":13},{"ruleId":"75","severity":1,"message":"83","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":21},{"ruleId":"75","severity":1,"message":"84","line":9,"column":50,"nodeType":"77","messageId":"78","endLine":9,"endColumn":58},{"ruleId":"75","severity":1,"message":"82","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":13},{"ruleId":"75","severity":1,"message":"85","line":11,"column":17,"nodeType":"77","messageId":"78","endLine":11,"endColumn":25},{"ruleId":"75","severity":1,"message":"86","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":17},{"ruleId":"75","severity":1,"message":"87","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":20},{"ruleId":"75","severity":1,"message":"88","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":19},{"ruleId":"75","severity":1,"message":"81","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":17},{"ruleId":"75","severity":1,"message":"82","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":13},{"ruleId":"75","severity":1,"message":"83","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":21},{"ruleId":"75","severity":1,"message":"89","line":14,"column":11,"nodeType":"77","messageId":"78","endLine":14,"endColumn":16},{"ruleId":"75","severity":1,"message":"90","line":15,"column":13,"nodeType":"77","messageId":"78","endLine":15,"endColumn":17},{"ruleId":"75","severity":1,"message":"91","line":15,"column":19,"nodeType":"77","messageId":"78","endLine":15,"endColumn":29},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'LoginForm' is defined but never used.","Identifier","unusedVar","'styles' is assigned a value but never used.","'PropertySafetyFilled' is defined but never used.","'decrypt' is defined but never used.","'axios' is defined but never used.","'useLocation' is defined but never used.","'ChatCard' is assigned a value but never used.","'setError' is assigned a value but never used.","'MyMessage' is defined but never used.","'TheirMessage' is defined but never used.","'MessageForm' is defined but never used.","'index' is assigned a value but never used.","'conn' is assigned a value but never used.","'activeChat' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]